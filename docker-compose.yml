version: '3'
services:

  docsweb:
    image: registry.gitlab.com/automatic-timetable-creation/backend:develop_docsweb
    ports:
      - 9009:80
    restart: always
    depends_on:
    - python

    networks:
      - project

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - 8080:8080
    volumes:
      - ./swagger:/swagger
    environment:
      SWAGGER_JSON: "/swagger/docs.yaml"
    restart: always

  python:
    image: registry.gitlab.com/automatic-timetable-creation/backend:latest
    command: /bin/bash -c "pip install -r requirements.txt &&
              pip install -r requirements_test.txt &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:80"
    ports:
      - 80:80
    volumes:
      - .:/app
    depends_on:
      - postgres
    restart: always
    environment:
      DEBUG: 'True'
    networks:
      - project
      - redis-net

  celery:
    image: registry.gitlab.com/automatic-timetable-creation/backend:latest
    command: /bin/bash -c "pip install -r requirements.txt && celery -A atc worker --beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    restart: always
    environment:
      DEBUG: 'True'
    networks:
      - project
      - redis-net

  redis:
    image: redis:5.0.4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    networks:
      - redis-net
    volumes:
      - redis-data:/data


  postgres:
    restart: always
    image: postgres:11.2-alpine
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    networks:
      - project

  frontend:
    image: registry.gitlab.com/automatic-timetable-creation/frontend:latest
    ports:
      - 5000:80
    depends_on:
      - python
    networks:
      - project

volumes:
  db_data:
  redis-data:

networks:
  project:
  redis-net:
