image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker info
  - apk add --no-cache py-pip
  - pip install docker-compose --no-cache-dir

docker-build:
  stage: build
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest -f docker/Dockerfile .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:backendweb -f docker/nginx/Dockerfile docker/nginx/ --no-cache
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:backendweb

#test:
#  stage: test
#  script:
#    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
#    - docker-compose -f docker-compose.autotest.yml run python
#  after_script:
#    - docker-compose -f docker-compose.autotest.yml down -v
#  coverage: '/TOTAL.*\d+%/'

deploy:
  stage: deploy
  script:
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
    - docker-compose -f docker-compose.prod.yml $CI_PROJECT_NAME stop
    - docker-compose -f docker-compose.prod.yml $CI_PROJECT_NAME rm -f
    - docker-compose -f docker-compose.prod.yml $CI_PROJECT_NAME up -d
  only:
    - master
    - feature/deploy
  tags:
    - docker
    - atc

