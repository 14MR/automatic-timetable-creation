version: '3.3'

services:
  backendweb:
    image: registry.gitlab.com/automatic-timetable-creation/backend:${CI_COMMIT_REF_SLUG}_web
    ports:
      - 80
    restart: always
    depends_on:
      - python
    networks:
      - project
      - web
    environment:
      VIRTUAL_HOST: "api.atc.mustafin.dev"
      LETSENCRYPT_HOST: "api.atc.mustafin.dev"
      LETSENCRYPT_EMAIL: "t.mustafin@innopolis.ru"

  postgres:
    image: postgres:11.2-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    restart: always
    networks:
      - project
    healthcheck:
      test: ["CMD-SHELL", "su postgres pg_isready"]
      interval: 1m30s
      timeout: 30s
      retries: 3

  python:
    image: registry.gitlab.com/automatic-timetable-creation/backend:${CI_COMMIT_REF_SLUG}_python
    restart: always
    depends_on:
      - postgres
    networks:
      - project

  docsweb:
    image: registry.gitlab.com/automatic-timetable-creation/backend:${CI_COMMIT_REF_SLUG}_docs
    ports:
      - 80
    restart: always
    depends_on:
      - python
    networks:
      - project
      - web
    environment:
      VIRTUAL_HOST: "docs.atc.mustafin.dev"
      LETSENCRYPT_HOST: "docs.atc.mustafin.dev"
      LETSENCRYPT_EMAIL: "t.mustafin@innopolis.ru"

  celery:
    image: registry.gitlab.com/automatic-timetable-creation/backend:${CI_COMMIT_REF_SLUG}_python
    command: /bin/bash -c "celery -A atc worker --beat --loglevel=info"
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - project

  redis:
    image: redis:5.0.4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    networks:
      - project
    volumes:
      - redis-data:/data


volumes:
  db_data:
  redis-data:

networks:
  project:
  web:
    external:
      name: web
